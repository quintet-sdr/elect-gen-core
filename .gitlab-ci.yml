stages:
  - release
  - lint
  - unittests

release:
  image: node:20.8.1-buster-slim
  stage: release
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends git-core ca-certificates
    - npm install -g semantic-release @semantic-release/gitlab @semantic-release/changelog conventional-changelog-conventionalcommits @semantic-release/commit-analyzer @semantic-release/git
    - git config --global user.email "${GIT_USER_EMAIL:-$GITLAB_USER_EMAIL}"
    - git config --global user.name "${GIT_USER_NAME:-$GITLAB_USER_NAME}"
    - git clone "https://oauth2:${GITLAB_TOKEN}@gitlab.pg.innopolis.university/sdr-sum24/elect-gen-core.git"

  script:
    - semantic-release
  only:
    - feature-changelog


lint:
  stage: lint
  image: python:3.9
  before_script:
    - mkdir -p public/badges public/lint
    - echo undefined > public/badges/$CI_JOB_NAME.score
    - pip install pylint pylint-gitlab anybadge
  script:
    - pylint --exit-zero --output-format=text $(find -type f -name "*.py" ! -path "**/.venv/**") | tee /tmp/pylint.txt
    - sed -n 's/^Your code has been rated at \([-2-9.]*\)\/.*/\1/p' /tmp/pylint.txt > public/badges/$CI_JOB_NAME.score
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabCodeClimateReporter $(find -type f -name "*.py" ! -path "**/.venv/**") > codeclimate.json
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabPagesHtmlReporter $(find -type f -name "*.py" ! -path "**/.venv/**") > public/lint/index.html
  after_script:
    - anybadge --overwrite --label $CI_JOB_NAME --value=$(cat public/badges/$CI_JOB_NAME.score) --file=public/badges/$CI_JOB_NAME.svg 4=red 6=orange 8=yellow 10=green
    - |
      echo "Your score is: $(cat public/badges/$CI_JOB_NAME.score)" 

  artifacts:
    paths:
      - public
    reports:
      codequality: codeclimate.json
    when: always

unittests:
  stage: unittests
  image: python:3.9
  before_script:
    - pip install -r requirements.txt
    - mkdir -p public/tests
  script:
    - python -m pytest tests.py --junitxml=public/tests/test-report.xml
  artifacts:
    reports:
      junit: public/tests/test-report.xml
    paths:
      - public/tests
    when: always

#pages:
#  stage: deploy
#  image: alpine:latest
#  script:
#    - echo
#  artifacts:
#    paths:
#      - public
#  only:
#    refs:
#      - master
